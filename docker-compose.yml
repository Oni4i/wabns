version: '3'

services:
  nginx:
    build:
      context: ./docker/nginx
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    container_name: "wabsn-nginx"
    restart: always
    ports:
      - "8081:80"
    networks:
      - backend_n

  backend:
    container_name: "wabsn-php"
    build:
      context: ./backend
    volumes:
      - ./backend:/var/www
    depends_on:
      - redis
    ports:
      - "5000:8000"
    networks:
      - backend_n

  frontend:
    container_name: "wabsn-frontend"
    restart: always
    build:
      context: ./frontend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"

  db:
    container_name: "wabsn-db"
    image: mysql:8.0.19
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=api
    volumes:
      - ./docker/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend_n

  redis:
    container_name: "wabsn-redis"
    image: redis:alpine
    volumes:
      - ./docker/redis:/var/lib/redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass root
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - backend_n

  redis-commander:
    container_name: "wabsn-redis-commander"
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=root
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - backend_n

networks:
  backend_n:
