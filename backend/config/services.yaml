# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    _instanceof:
        App\Controller\API\AbstractAPIController:
            calls:
                - setAPIResponseService: [ '@App\Contract\Response\APIResponseServiceInterface' ]

        App\Contract\Validation\ValidationServiceInterface:
            tags: ['app.validation_service']

        App\Contract\WorkService\WorkQueryInterface:
            tags: ['app.work_query']

        App\Contract\WorkService\ResponseHandlerServiceInterface:
            tags: [ 'app.work_response' ]

        App\Service\WorkService\AbstractRequestWorkService:
            tags: [ 'app.work_request' ]
            calls:
                - setQueryContainer: [!tagged_locator { tag: 'app.work_query', default_index_method: 'getAlias' }]
                - setClient: [ '@Symfony\Contracts\HttpClient\HttpClientInterface' ]
                - setResponseContainer: [!tagged_locator { tag: 'app.work_response', default_index_method: 'getAlias' }]

    App\Validation\DTOValidationWithEntityValidator:
        arguments:
            $services: !tagged_locator { tag: 'app.validation_service', default_index_method: 'getDTOClass' }

    App\Contract\Response\APIResponseServiceInterface: '@App\Service\APIResponseService'

    App\EventListener\OnKernelRequest\OptionMethodListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\MessageBus\MessageHandler\UpdateVacancyHandler:
        arguments:
            $requestLocator: !tagged_locator { tag: 'app.work_request', default_index_method: 'getAlias' }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
